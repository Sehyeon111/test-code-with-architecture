package com.example.demo.mock;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

import com.example.demo.user.domain.User;
import com.example.demo.user.domain.UserStatus;
import com.example.demo.user.service.port.UserRepository;

public class FakeUserRepository implements UserRepository{
	
	private final AtomicLong autoGeneratedId = new AtomicLong(0);
	private List<User> data = Collections.synchronizedList(new ArrayList<>());

	@Override
	public Optional<User> findByIdAndStatus(long id, UserStatus userStatus) {
		// TODO Auto-generated method stub
		return data.stream().filter(item -> item.getId().equals(id) && item.getStatus().equals(userStatus)).findAny();
	}

	@Override
	public Optional<User> findByEmailAndStatus(String email, UserStatus userStatus) {
		// TODO Auto-generated method stub
		return data.stream().filter(item -> item.getEmail().equals(email) && item.getStatus().equals(userStatus)).findAny();
	}

	@Override
	public Optional<User> findById(long id) {
		// TODO Auto-generated method stub
		return data.stream().filter(item -> item.getId().equals(id)).findAny();
	}

	@Override
	public User save(User user) {
		if(user.getId()==null || user.getId()==0)	// 아이디가 없거나 0이라면 새로 생성 
		{
			User newUser = User.builder()
					.id(autoGeneratedId.incrementAndGet())
					.email(user.getEmail())
					.address(user.getAddress())
					.nickname(user.getNickname())
					.status(user.getStatus())
					.certificationCode(user.getCertificationCode())
					.lastLoginAt(user.getLastLoginAt())
					.build();
			
			data.add(newUser);
			return newUser;
		} else {
			data.removeIf(item -> Objects.equals( item.getId(), user.getId()));
			data.add(user);
			return user;
		}
		
		
	}

}
