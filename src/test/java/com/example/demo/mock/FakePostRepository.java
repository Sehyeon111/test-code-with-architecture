package com.example.demo.mock;

import static org.mockito.Mockito.RETURNS_DEEP_STUBS;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

import com.example.demo.post.domain.Post;
import com.example.demo.post.service.port.PostRepository;

public class FakePostRepository implements PostRepository {

	private final AtomicLong autoGeneratedId = new AtomicLong();
	private final List<Post> data = Collections.synchronizedList(new ArrayList<>());
	
	@Override
	public Optional<Post> findById(long id) {
		// TODO Auto-generated method stub
		return data.stream().filter(item -> item.getId()==id).findAny();
	}

	@Override
	public Post save(Post post) {
		if(post.getId()==null || post.getId()==0) {
			Post newPost = Post.builder()
					.id(autoGeneratedId.incrementAndGet())
					.content(post.getContent())
					.writer(post.getWriter())
					.createdAt(post.getCreatedAt())
					.modifiedAt(post.getModifiedAt())
					.build();
			data.add(newPost);
			return newPost;
		} else {
			data.removeIf(item -> Objects.equals(item.getId(), post.getId()));
			data.add(post);
			return post;
		}
	}

}
